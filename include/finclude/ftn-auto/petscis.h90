        subroutine ISStrideGetInfo(is, first, step ,ierr)
       IS is ! IS
       PetscInt first ! PetscInt
       PetscInt step ! PetscInt
       integer ierr
       end subroutine
        subroutine ISStrideSetStride(is, n, first, step ,ierr)
       IS is ! IS
       PetscInt n ! PetscInt
       PetscInt first ! PetscInt
       PetscInt step ! PetscInt
       integer ierr
       end subroutine
        subroutine ISCreateStride(comm, n, first, step, is ,ierr)
       integer comm ! MPI_Comm
       PetscInt n ! PetscInt
       PetscInt first ! PetscInt
       PetscInt step ! PetscInt
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISCreate(comm, is ,ierr)
       integer comm ! MPI_Comm
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISIdentity(is, ident ,ierr)
       IS is ! IS
       PetscBool ident ! PetscBool
       integer ierr
       end subroutine
        subroutine ISSetIdentity(is ,ierr)
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISContiguousLocal(is, gstart, gend, start, contig ,  &
     &ierr)
       IS is ! IS
       PetscInt gstart ! PetscInt
       PetscInt gend ! PetscInt
       PetscInt start ! PetscInt
       PetscBool contig ! PetscBool
       integer ierr
       end subroutine
        subroutine ISPermutation(is, perm ,ierr)
       IS is ! IS
       PetscBool perm ! PetscBool
       integer ierr
       end subroutine
        subroutine ISSetPermutation(is ,ierr)
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISDestroy(is ,ierr)
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISInvertPermutation(is, nlocal, isout ,ierr)
       IS is ! IS
       PetscInt nlocal ! PetscInt
       IS isout ! IS
       integer ierr
       end subroutine
        subroutine ISGetSize(is, size ,ierr)
       IS is ! IS
       PetscInt size ! PetscInt
       integer ierr
       end subroutine
        subroutine ISGetLocalSize(is, size ,ierr)
       IS is ! IS
       PetscInt size ! PetscInt
       integer ierr
       end subroutine
        subroutine ISGetNonlocalIS(is, complement ,ierr)
       IS is ! IS
       IS complement ! IS
       integer ierr
       end subroutine
        subroutine ISRestoreNonlocalIS(is, complement ,ierr)
       IS is ! IS
       IS complement ! IS
       integer ierr
       end subroutine
        subroutine ISSort(is ,ierr)
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISToGeneral(is ,ierr)
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISSorted(is, flg ,ierr)
       IS is ! IS
       PetscBool flg ! PetscBool
       integer ierr
       end subroutine
        subroutine ISDuplicate(is, newIS ,ierr)
       IS is ! IS
       IS newIS ! IS
       integer ierr
       end subroutine
        subroutine ISCopy(is, isy ,ierr)
       IS is ! IS
       IS isy ! IS
       integer ierr
       end subroutine
        subroutine ISOnComm(is, comm, mode, newis ,ierr)
       IS is ! IS
       integer comm ! MPI_Comm
       PetscCopyMode mode ! PetscCopyMode
       IS newis ! IS
       integer ierr
       end subroutine
        subroutine ISSetBlockSize(is, bs ,ierr)
       IS is ! IS
       PetscInt bs ! PetscInt
       integer ierr
       end subroutine
        subroutine ISGetBlockSize(is, size ,ierr)
       IS is ! IS
       PetscInt size ! PetscInt
       integer ierr
       end subroutine
        subroutine ISCreateGeneral(comm, n, idx, mode, is ,ierr)
       integer comm ! MPI_Comm
       PetscInt n ! PetscInt
       PetscInt idx (*) ! PetscInt
       PetscCopyMode mode ! PetscCopyMode
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISGeneralSetIndices(is, n, idx, mode ,ierr)
       IS is ! IS
       PetscInt n ! PetscInt
       PetscInt idx (*) ! PetscInt
       PetscCopyMode mode ! PetscCopyMode
       integer ierr
       end subroutine
        subroutine ISBlockSetIndices(is, bs, n, idx, mode ,ierr)
       IS is ! IS
       PetscInt bs ! PetscInt
       PetscInt n ! PetscInt
       PetscInt idx (*) ! PetscInt
       PetscCopyMode mode ! PetscCopyMode
       integer ierr
       end subroutine
        subroutine ISCreateBlock(comm, bs, n, idx, mode, is ,ierr)
       integer comm ! MPI_Comm
       PetscInt bs ! PetscInt
       PetscInt n ! PetscInt
       PetscInt idx (*) ! PetscInt
       PetscCopyMode mode ! PetscCopyMode
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISBlockGetLocalSize(is, size ,ierr)
       IS is ! IS
       PetscInt size ! PetscInt
       integer ierr
       end subroutine
        subroutine ISBlockGetSize(is, size ,ierr)
       IS is ! IS
       PetscInt size ! PetscInt
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingCreateIS(is, mapping ,ierr)
       IS is ! IS
       ISLocalToGlobalMapping mapping ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingCreate(cm, n, indices, mode,   &
     &mapping ,ierr)
       integer cm ! MPI_Comm
       PetscInt n ! PetscInt
       PetscInt indices (*) ! PetscInt
       PetscCopyMode mode ! PetscCopyMode
       ISLocalToGlobalMapping mapping ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingBlock(inmap, bs, outmap ,ierr)
       ISLocalToGlobalMapping inmap ! ISLocalToGlobalMapping
       PetscInt bs ! PetscInt
       ISLocalToGlobalMapping outmap ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingUnBlock(inmap, bs, outmap ,ierr&
     &)
       ISLocalToGlobalMapping inmap ! ISLocalToGlobalMapping
       PetscInt bs ! PetscInt
       ISLocalToGlobalMapping outmap ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingDestroy(mapping ,ierr)
       ISLocalToGlobalMapping mapping ! ISLocalToGlobalMapping
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingApplyIS(mapping, is, newis ,   &
     &ierr)
       ISLocalToGlobalMapping mapping ! ISLocalToGlobalMapping
       IS is ! IS
       IS newis ! IS
       integer ierr
       end subroutine
        subroutine ISLocalToGlobalMappingApply(mapping, N, in, out ,ierr&
     &)
       ISLocalToGlobalMapping mapping ! ISLocalToGlobalMapping
       PetscInt N ! PetscInt
       PetscInt in (*) ! PetscInt
       PetscInt out (*) ! PetscInt
       integer ierr
       end subroutine
        subroutine ISGlobalToLocalMappingApply(mapping, type, n, idx,   &
     &nout, idxout ,ierr)
       ISLocalToGlobalMapping mapping ! ISLocalToGlobalMapping
       ISGlobalToLocalMappingType type ! ISGlobalToLocalMappingType
       PetscInt n ! PetscInt
       PetscInt idx (*) ! PetscInt
       PetscInt nout ! PetscInt
       PetscInt idxout (*) ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionCreate(comm, s ,ierr)
       integer comm ! MPI_Comm
       PetscSection s ! PetscSection
       integer ierr
       end subroutine
        subroutine PetscSectionClone(section, newSection ,ierr)
       PetscSection section ! PetscSection
       PetscSection newSection ! PetscSection
       integer ierr
       end subroutine
        subroutine PetscSectionGetNumFields(s, numFields ,ierr)
       PetscSection s ! PetscSection
       PetscInt numFields ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetNumFields(s, numFields ,ierr)
       PetscSection s ! PetscSection
       PetscInt numFields ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetFieldComponents(s, field, numComp ,   &
     &ierr)
       PetscSection s ! PetscSection
       PetscInt field ! PetscInt
       PetscInt numComp ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetFieldComponents(s, field, numComp ,   &
     &ierr)
       PetscSection s ! PetscSection
       PetscInt field ! PetscInt
       PetscInt numComp ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetChart(s, pStart, pEnd ,ierr)
       PetscSection s ! PetscSection
       PetscInt pStart ! PetscInt
       PetscInt pEnd ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetChart(s, pStart, pEnd ,ierr)
       PetscSection s ! PetscSection
       PetscInt pStart ! PetscInt
       PetscInt pEnd ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetDof(s, point, numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetDof(s, point, numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionAddDof(s, point, numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetFieldDof(s, point, field, numDof ,ierr&
     &)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetFieldDof(s, point, field, numDof ,ierr&
     &)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionAddFieldDof(s, point, field, numDof ,ierr&
     &)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetConstraintDof(s, point, numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetConstraintDof(s, point, numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionAddConstraintDof(s, point, numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetFieldConstraintDof(s, point, field,   &
     &numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetFieldConstraintDof(s, point, field,   &
     &numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionAddFieldConstraintDof(s, point, field,   &
     &numDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt numDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetUp(s ,ierr)
       PetscSection s ! PetscSection
       integer ierr
       end subroutine
        subroutine PetscSectionGetMaxDof(s, maxDof ,ierr)
       PetscSection s ! PetscSection
       PetscInt maxDof ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetStorageSize(s, size ,ierr)
       PetscSection s ! PetscSection
       PetscInt size ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionCreateGlobalSection(s, sf,               &
     &includeConstraints, gsection ,ierr)
       PetscSection s ! PetscSection
       PetscSF sf ! PetscSF
       PetscBool includeConstraints ! PetscBool
       PetscSection gsection ! PetscSection
       integer ierr
       end subroutine
        subroutine PetscSectionCreateGlobalSectionCensored(s, sf,       &
     &includeConstraints, numExcludes, excludes, gsection ,ierr)
       PetscSection s ! PetscSection
       PetscSF sf ! PetscSF
       PetscBool includeConstraints ! PetscBool
       PetscInt numExcludes ! PetscInt
       PetscInt excludes (*) ! PetscInt
       PetscSection gsection ! PetscSection
       integer ierr
       end subroutine
        subroutine PetscSectionGetOffset(s, point, offset ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt offset ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetOffset(s, point, offset ,ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt offset ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetFieldOffset(s, point, field, offset , &
     &ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt offset ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionSetFieldOffset(s, point, field, offset , &
     &ierr)
       PetscSection s ! PetscSection
       PetscInt point ! PetscInt
       PetscInt field ! PetscInt
       PetscInt offset ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionGetOffsetRange(s, start, end ,ierr)
       PetscSection s ! PetscSection
       PetscInt start ! PetscInt
       PetscInt end ! PetscInt
       integer ierr
       end subroutine
        subroutine PetscSectionReset(s ,ierr)
       PetscSection s ! PetscSection
       integer ierr
       end subroutine
        subroutine PetscSectionDestroy(s ,ierr)
       PetscSection s ! PetscSection
       integer ierr
       end subroutine
        subroutine ISEqual(is1, is2, flg ,ierr)
       IS is1 ! IS
       IS is2 ! IS
       PetscBool flg ! PetscBool
       integer ierr
       end subroutine
        subroutine ISColoringDestroy(iscoloring ,ierr)
       ISColoring iscoloring ! ISColoring
       integer ierr
       end subroutine
        subroutine ISPartitioningToNumbering(part, is ,ierr)
       IS part ! IS
       IS is ! IS
       integer ierr
       end subroutine
        subroutine ISPartitioningCount(part, len, count ,ierr)
       IS part ! IS
       PetscInt len ! PetscInt
       PetscInt count (*) ! PetscInt
       integer ierr
       end subroutine
        subroutine ISAllGather(is, isout ,ierr)
       IS is ! IS
       IS isout ! IS
       integer ierr
       end subroutine
        subroutine ISComplement(is, nmin, nmax, isout ,ierr)
       IS is ! IS
       PetscInt nmin ! PetscInt
       PetscInt nmax ! PetscInt
       IS isout ! IS
       integer ierr
       end subroutine
        subroutine ISDifference(is1, is2, isout ,ierr)
       IS is1 ! IS
       IS is2 ! IS
       IS isout ! IS
       integer ierr
       end subroutine
        subroutine ISSum(is1, is2, is3 ,ierr)
       IS is1 ! IS
       IS is2 ! IS
       IS is3 ! IS
       integer ierr
       end subroutine
        subroutine ISExpand(is1, is2, isout ,ierr)
       IS is1 ! IS
       IS is2 ! IS
       IS isout ! IS
       integer ierr
       end subroutine
        subroutine ISConcatenate(comm, len, islist, isout ,ierr)
       integer comm ! MPI_Comm
       PetscInt len ! PetscInt
       IS islist (*) ! IS
       IS isout ! IS
       integer ierr
       end subroutine
        subroutine ISListToPair(comm, listlen, islist, xis, yis ,ierr)
       integer comm ! MPI_Comm
       PetscInt listlen ! PetscInt
       IS islist (*) ! IS
       IS xis ! IS
       IS yis ! IS
       integer ierr
       end subroutine
        subroutine ISPairToList(xis, yis, listlen, islist ,ierr)
       IS xis ! IS
       IS yis ! IS
       PetscInt listlen ! PetscInt
       IS islist ! IS
       integer ierr
       end subroutine
        subroutine ISEmbed(a, b, drop, c ,ierr)
       IS a ! IS
       IS b ! IS
       PetscBool drop ! PetscBool
       IS c ! IS
       integer ierr
       end subroutine
